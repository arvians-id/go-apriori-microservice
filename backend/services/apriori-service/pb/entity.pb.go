// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: services/apriori-service/proto/entity.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdCategory int64                  `protobuf:"varint,1,opt,name=IdCategory,proto3" json:"IdCategory,omitempty"` // @gotags: json:"id_category"
	Name       string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`              // @gotags: json:"name"
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`    // @gotags: json:"created_at"
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`    // @gotags: json:"updated_at"
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_apriori_service_proto_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_services_apriori_service_proto_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_services_apriori_service_proto_entity_proto_rawDescGZIP(), []int{0}
}

func (x *Category) GetIdCategory() int64 {
	if x != nil {
		return x.IdCategory
	}
	return 0
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Category) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type PasswordReset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email   string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`      // @gotags: json:"email"
	Token   string `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`      // @gotags: json:"token"
	Expired int64  `protobuf:"varint,3,opt,name=Expired,proto3" json:"Expired,omitempty"` // @gotags: json:"expired"
}

func (x *PasswordReset) Reset() {
	*x = PasswordReset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_apriori_service_proto_entity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordReset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordReset) ProtoMessage() {}

func (x *PasswordReset) ProtoReflect() protoreflect.Message {
	mi := &file_services_apriori_service_proto_entity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordReset.ProtoReflect.Descriptor instead.
func (*PasswordReset) Descriptor() ([]byte, []int) {
	return file_services_apriori_service_proto_entity_proto_rawDescGZIP(), []int{1}
}

func (x *PasswordReset) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PasswordReset) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PasswordReset) GetExpired() int64 {
	if x != nil {
		return x.Expired
	}
	return 0
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdComment   int64                  `protobuf:"varint,1,opt,name=IdComment,proto3" json:"IdComment,omitempty"`          // @gotags: json:"id_comment"
	UserOrderId int64                  `protobuf:"varint,2,opt,name=UserOrderId,proto3" json:"UserOrderId,omitempty"`      // @gotags: json:"user_order_id"
	ProductCode string                 `protobuf:"bytes,3,opt,name=ProductCode,proto3" json:"ProductCode,omitempty"`       // @gotags: json:"product_code"
	Description *string                `protobuf:"bytes,4,opt,name=Description,proto3,oneof" json:"Description,omitempty"` // @gotags: json:"description"
	Tag         *string                `protobuf:"bytes,5,opt,name=Tag,proto3,oneof" json:"Tag,omitempty"`                 // @gotags: json:"tag"
	Rating      int32                  `protobuf:"varint,6,opt,name=Rating,proto3" json:"Rating,omitempty"`                // @gotags: json:"rating"
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`           // @gotags: json:"created_at"
	UserOrder   *UserOrder             `protobuf:"bytes,8,opt,name=UserOrder,proto3" json:"UserOrder,omitempty"`           // @gotags: json:"user_order"
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_apriori_service_proto_entity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_services_apriori_service_proto_entity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_services_apriori_service_proto_entity_proto_rawDescGZIP(), []int{2}
}

func (x *Comment) GetIdComment() int64 {
	if x != nil {
		return x.IdComment
	}
	return 0
}

func (x *Comment) GetUserOrderId() int64 {
	if x != nil {
		return x.UserOrderId
	}
	return 0
}

func (x *Comment) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *Comment) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Comment) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *Comment) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Comment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Comment) GetUserOrder() *UserOrder {
	if x != nil {
		return x.UserOrder
	}
	return nil
}

type RatingFromComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating        int32 `protobuf:"varint,1,opt,name=Rating,proto3" json:"Rating,omitempty"`               // @gotags: json:"rating"
	ResultRating  int32 `protobuf:"varint,2,opt,name=ResultRating,proto3" json:"ResultRating,omitempty"`   // @gotags: json:"result_rating"
	ResultComment int32 `protobuf:"varint,3,opt,name=ResultComment,proto3" json:"ResultComment,omitempty"` // @gotags: json:"result_comment"
}

func (x *RatingFromComment) Reset() {
	*x = RatingFromComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_apriori_service_proto_entity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingFromComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingFromComment) ProtoMessage() {}

func (x *RatingFromComment) ProtoReflect() protoreflect.Message {
	mi := &file_services_apriori_service_proto_entity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingFromComment.ProtoReflect.Descriptor instead.
func (*RatingFromComment) Descriptor() ([]byte, []int) {
	return file_services_apriori_service_proto_entity_proto_rawDescGZIP(), []int{3}
}

func (x *RatingFromComment) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *RatingFromComment) GetResultRating() int32 {
	if x != nil {
		return x.ResultRating
	}
	return 0
}

func (x *RatingFromComment) GetResultComment() int32 {
	if x != nil {
		return x.ResultComment
	}
	return 0
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdNotification int64                  `protobuf:"varint,1,opt,name=IdNotification,proto3" json:"IdNotification,omitempty"` // @gotags: json:"id_notification"
	UserId         int64                  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`                 // @gotags: json:"user_id"
	Title          string                 `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`                    // @gotags: json:"title"
	Description    *string                `protobuf:"bytes,4,opt,name=Description,proto3,oneof" json:"Description,omitempty"`  // @gotags: json:"description"
	URL            *string                `protobuf:"bytes,5,opt,name=URL,proto3,oneof" json:"URL,omitempty"`                  // @gotags: json:"url"
	IsRead         bool                   `protobuf:"varint,6,opt,name=IsRead,proto3" json:"IsRead,omitempty"`                 // @gotags: json:"is_read"
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`            // @gotags: json:"created_at"
	User           *User                  `protobuf:"bytes,8,opt,name=User,proto3" json:"User,omitempty"`                      // @gotags: json:"user"
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_apriori_service_proto_entity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_services_apriori_service_proto_entity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_services_apriori_service_proto_entity_proto_rawDescGZIP(), []int{4}
}

func (x *Notification) GetIdNotification() int64 {
	if x != nil {
		return x.IdNotification
	}
	return 0
}

func (x *Notification) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Notification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Notification) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Notification) GetURL() string {
	if x != nil && x.URL != nil {
		return *x.URL
	}
	return ""
}

func (x *Notification) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *Notification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Notification) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdTransaction int64                  `protobuf:"varint,1,opt,name=IdTransaction,proto3" json:"IdTransaction,omitempty"` // @gotags: json:"id_transaction"
	ProductName   string                 `protobuf:"bytes,2,opt,name=ProductName,proto3" json:"ProductName,omitempty"`      // @gotags: json:"product_name"
	CustomerName  string                 `protobuf:"bytes,3,opt,name=CustomerName,proto3" json:"CustomerName,omitempty"`    // @gotags: json:"customer_name"
	NoTransaction string                 `protobuf:"bytes,4,opt,name=NoTransaction,proto3" json:"NoTransaction,omitempty"`  // @gotags: json:"no_transaction"
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`          // @gotags: json:"created_at"
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`          // @gotags: json:"updated_at"
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_apriori_service_proto_entity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_services_apriori_service_proto_entity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_services_apriori_service_proto_entity_proto_rawDescGZIP(), []int{5}
}

func (x *Transaction) GetIdTransaction() int64 {
	if x != nil {
		return x.IdTransaction
	}
	return 0
}

func (x *Transaction) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *Transaction) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *Transaction) GetNoTransaction() string {
	if x != nil {
		return x.NoTransaction
	}
	return ""
}

func (x *Transaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Transaction) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdPayload         int64        `protobuf:"varint,1,opt,name=IdPayload,proto3" json:"IdPayload,omitempty"`                      // @gotags: json:"id_payload"
	UserId            int64        `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`                            // @gotags: json:"user_id"
	OrderId           *string      `protobuf:"bytes,3,opt,name=OrderId,proto3,oneof" json:"OrderId,omitempty"`                     // @gotags: json:"order_id"
	TransactionTime   *string      `protobuf:"bytes,4,opt,name=TransactionTime,proto3,oneof" json:"TransactionTime,omitempty"`     // @gotags: json:"transaction_time"
	TransactionStatus *string      `protobuf:"bytes,5,opt,name=TransactionStatus,proto3,oneof" json:"TransactionStatus,omitempty"` // @gotags: json:"transaction_status"
	TransactionId     *string      `protobuf:"bytes,6,opt,name=TransactionId,proto3,oneof" json:"TransactionId,omitempty"`         // @gotags: json:"transaction_id"
	StatusCode        *string      `protobuf:"bytes,7,opt,name=StatusCode,proto3,oneof" json:"StatusCode,omitempty"`               // @gotags: json:"status_code"
	SignatureKey      *string      `protobuf:"bytes,8,opt,name=SignatureKey,proto3,oneof" json:"SignatureKey,omitempty"`           // @gotags: json:"signature_key"
	SettlementTime    *string      `protobuf:"bytes,9,opt,name=SettlementTime,proto3,oneof" json:"SettlementTime,omitempty"`       // @gotags: json:"settlement_time"
	PaymentType       *string      `protobuf:"bytes,10,opt,name=PaymentType,proto3,oneof" json:"PaymentType,omitempty"`            // @gotags: json:"payment_type"
	MerchantId        *string      `protobuf:"bytes,11,opt,name=MerchantId,proto3,oneof" json:"MerchantId,omitempty"`              // @gotags: json:"merchant_id"
	GrossAmount       *string      `protobuf:"bytes,12,opt,name=GrossAmount,proto3,oneof" json:"GrossAmount,omitempty"`            // @gotags: json:"gross_amount"
	FraudStatus       *string      `protobuf:"bytes,13,opt,name=FraudStatus,proto3,oneof" json:"FraudStatus,omitempty"`            // @gotags: json:"fraud_status"
	BankType          *string      `protobuf:"bytes,14,opt,name=BankType,proto3,oneof" json:"BankType,omitempty"`                  // @gotags: json:"bank_type"
	VANumber          *string      `protobuf:"bytes,15,opt,name=VANumber,proto3,oneof" json:"VANumber,omitempty"`                  // @gotags: json:"va_number"
	BillerCode        *string      `protobuf:"bytes,16,opt,name=BillerCode,proto3,oneof" json:"BillerCode,omitempty"`              // @gotags: json:"biller_code"
	BillKey           *string      `protobuf:"bytes,17,opt,name=BillKey,proto3,oneof" json:"BillKey,omitempty"`                    // @gotags: json:"bill_key"
	ReceiptNumber     *string      `protobuf:"bytes,18,opt,name=ReceiptNumber,proto3,oneof" json:"ReceiptNumber,omitempty"`        // @gotags: json:"receipt_number"
	Address           *string      `protobuf:"bytes,19,opt,name=Address,proto3,oneof" json:"Address,omitempty"`                    // @gotags: json:"address"
	Courier           *string      `protobuf:"bytes,20,opt,name=Courier,proto3,oneof" json:"Courier,omitempty"`                    // @gotags: json:"courier"
	CourierService    *string      `protobuf:"bytes,21,opt,name=CourierService,proto3,oneof" json:"CourierService,omitempty"`      // @gotags: json:"courier_service"
	User              *User        `protobuf:"bytes,22,opt,name=User,proto3" json:"User,omitempty"`                                // @gotags: json:"user"
	UserOrder         []*UserOrder `protobuf:"bytes,23,rep,name=UserOrder,proto3" json:"UserOrder,omitempty"`                      // @gotags: json:"user_order"
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_apriori_service_proto_entity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_services_apriori_service_proto_entity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_services_apriori_service_proto_entity_proto_rawDescGZIP(), []int{6}
}

func (x *Payment) GetIdPayload() int64 {
	if x != nil {
		return x.IdPayload
	}
	return 0
}

func (x *Payment) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Payment) GetOrderId() string {
	if x != nil && x.OrderId != nil {
		return *x.OrderId
	}
	return ""
}

func (x *Payment) GetTransactionTime() string {
	if x != nil && x.TransactionTime != nil {
		return *x.TransactionTime
	}
	return ""
}

func (x *Payment) GetTransactionStatus() string {
	if x != nil && x.TransactionStatus != nil {
		return *x.TransactionStatus
	}
	return ""
}

func (x *Payment) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *Payment) GetStatusCode() string {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return ""
}

func (x *Payment) GetSignatureKey() string {
	if x != nil && x.SignatureKey != nil {
		return *x.SignatureKey
	}
	return ""
}

func (x *Payment) GetSettlementTime() string {
	if x != nil && x.SettlementTime != nil {
		return *x.SettlementTime
	}
	return ""
}

func (x *Payment) GetPaymentType() string {
	if x != nil && x.PaymentType != nil {
		return *x.PaymentType
	}
	return ""
}

func (x *Payment) GetMerchantId() string {
	if x != nil && x.MerchantId != nil {
		return *x.MerchantId
	}
	return ""
}

func (x *Payment) GetGrossAmount() string {
	if x != nil && x.GrossAmount != nil {
		return *x.GrossAmount
	}
	return ""
}

func (x *Payment) GetFraudStatus() string {
	if x != nil && x.FraudStatus != nil {
		return *x.FraudStatus
	}
	return ""
}

func (x *Payment) GetBankType() string {
	if x != nil && x.BankType != nil {
		return *x.BankType
	}
	return ""
}

func (x *Payment) GetVANumber() string {
	if x != nil && x.VANumber != nil {
		return *x.VANumber
	}
	return ""
}

func (x *Payment) GetBillerCode() string {
	if x != nil && x.BillerCode != nil {
		return *x.BillerCode
	}
	return ""
}

func (x *Payment) GetBillKey() string {
	if x != nil && x.BillKey != nil {
		return *x.BillKey
	}
	return ""
}

func (x *Payment) GetReceiptNumber() string {
	if x != nil && x.ReceiptNumber != nil {
		return *x.ReceiptNumber
	}
	return ""
}

func (x *Payment) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *Payment) GetCourier() string {
	if x != nil && x.Courier != nil {
		return *x.Courier
	}
	return ""
}

func (x *Payment) GetCourierService() string {
	if x != nil && x.CourierService != nil {
		return *x.CourierService
	}
	return ""
}

func (x *Payment) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Payment) GetUserOrder() []*UserOrder {
	if x != nil {
		return x.UserOrder
	}
	return nil
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdProduct   int64                  `protobuf:"varint,1,opt,name=IdProduct,proto3" json:"IdProduct,omitempty"`          // @gotags: json:"id_product"
	Code        string                 `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`                     // @gotags: json:"code"
	Name        string                 `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`                     // @gotags: json:"name"
	Description *string                `protobuf:"bytes,4,opt,name=Description,proto3,oneof" json:"Description,omitempty"` // @gotags: json:"description"
	Price       int32                  `protobuf:"varint,5,opt,name=Price,proto3" json:"Price,omitempty"`                  // @gotags: json:"price"
	Category    string                 `protobuf:"bytes,6,opt,name=Category,proto3" json:"Category,omitempty"`             // @gotags: json:"category"
	IsEmpty     bool                   `protobuf:"varint,7,opt,name=IsEmpty,proto3" json:"IsEmpty,omitempty"`              // @gotags: json:"is_empty"
	Mass        int32                  `protobuf:"varint,8,opt,name=Mass,proto3" json:"Mass,omitempty"`                    // @gotags: json:"mass"
	Image       *string                `protobuf:"bytes,9,opt,name=Image,proto3,oneof" json:"Image,omitempty"`             // @gotags: json:"image"
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`          // @gotags: json:"created_at"
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`          // @gotags: json:"updated_at"
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_apriori_service_proto_entity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_services_apriori_service_proto_entity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_services_apriori_service_proto_entity_proto_rawDescGZIP(), []int{7}
}

func (x *Product) GetIdProduct() int64 {
	if x != nil {
		return x.IdProduct
	}
	return 0
}

func (x *Product) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Product) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Product) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Product) GetIsEmpty() bool {
	if x != nil {
		return x.IsEmpty
	}
	return false
}

func (x *Product) GetMass() int32 {
	if x != nil {
		return x.Mass
	}
	return 0
}

func (x *Product) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

func (x *Product) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Product) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ProductRecommendation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AprioriId          int64   `protobuf:"varint,1,opt,name=AprioriId,proto3" json:"AprioriId,omitempty"`                        // @gotags: json:"apriori_id"
	AprioriCode        string  `protobuf:"bytes,2,opt,name=AprioriCode,proto3" json:"AprioriCode,omitempty"`                     // @gotags: json:"apriori_code"
	AprioriItem        string  `protobuf:"bytes,3,opt,name=AprioriItem,proto3" json:"AprioriItem,omitempty"`                     // @gotags: json:"apriori_item"
	AprioriDiscount    float32 `protobuf:"fixed32,4,opt,name=AprioriDiscount,proto3" json:"AprioriDiscount,omitempty"`           // @gotags: json:"apriori_discount"
	AprioriDescription *string `protobuf:"bytes,5,opt,name=AprioriDescription,proto3,oneof" json:"AprioriDescription,omitempty"` // @gotags: json:"apriori_description"
	AprioriImage       *string `protobuf:"bytes,6,opt,name=AprioriImage,proto3,oneof" json:"AprioriImage,omitempty"`             // @gotags: json:"apriori_image"
	ProductTotalPrice  int32   `protobuf:"varint,7,opt,name=ProductTotalPrice,proto3" json:"ProductTotalPrice,omitempty"`        // @gotags: json:"product_total_price"
	PriceDiscount      int32   `protobuf:"varint,8,opt,name=PriceDiscount,proto3" json:"PriceDiscount,omitempty"`                // @gotags: json:"price_discount"
	Mass               int32   `protobuf:"varint,9,opt,name=Mass,proto3" json:"Mass,omitempty"`                                  // @gotags: json:"mass"
}

func (x *ProductRecommendation) Reset() {
	*x = ProductRecommendation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_apriori_service_proto_entity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductRecommendation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductRecommendation) ProtoMessage() {}

func (x *ProductRecommendation) ProtoReflect() protoreflect.Message {
	mi := &file_services_apriori_service_proto_entity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductRecommendation.ProtoReflect.Descriptor instead.
func (*ProductRecommendation) Descriptor() ([]byte, []int) {
	return file_services_apriori_service_proto_entity_proto_rawDescGZIP(), []int{8}
}

func (x *ProductRecommendation) GetAprioriId() int64 {
	if x != nil {
		return x.AprioriId
	}
	return 0
}

func (x *ProductRecommendation) GetAprioriCode() string {
	if x != nil {
		return x.AprioriCode
	}
	return ""
}

func (x *ProductRecommendation) GetAprioriItem() string {
	if x != nil {
		return x.AprioriItem
	}
	return ""
}

func (x *ProductRecommendation) GetAprioriDiscount() float32 {
	if x != nil {
		return x.AprioriDiscount
	}
	return 0
}

func (x *ProductRecommendation) GetAprioriDescription() string {
	if x != nil && x.AprioriDescription != nil {
		return *x.AprioriDescription
	}
	return ""
}

func (x *ProductRecommendation) GetAprioriImage() string {
	if x != nil && x.AprioriImage != nil {
		return *x.AprioriImage
	}
	return ""
}

func (x *ProductRecommendation) GetProductTotalPrice() int32 {
	if x != nil {
		return x.ProductTotalPrice
	}
	return 0
}

func (x *ProductRecommendation) GetPriceDiscount() int32 {
	if x != nil {
		return x.PriceDiscount
	}
	return 0
}

func (x *ProductRecommendation) GetMass() int32 {
	if x != nil {
		return x.Mass
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdUser       int64                  `protobuf:"varint,1,opt,name=IdUser,proto3" json:"IdUser,omitempty"`             // @gotags: json:"id_user"
	Role         int32                  `protobuf:"varint,2,opt,name=Role,proto3" json:"Role,omitempty"`                 // @gotags: json:"role"
	Name         string                 `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`                  // @gotags: json:"name"
	Email        string                 `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`                // @gotags: json:"email"
	Address      string                 `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty"`            // @gotags: json:"address"
	Phone        string                 `protobuf:"bytes,6,opt,name=Phone,proto3" json:"Phone,omitempty"`                // @gotags: json:"phone"
	Password     string                 `protobuf:"bytes,7,opt,name=Password,proto3" json:"Password,omitempty"`          // @gotags: json:"password"
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`        // @gotags: json:"created_at"
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`        // @gotags: json:"updated_at"
	Notification []*Notification        `protobuf:"bytes,10,rep,name=Notification,proto3" json:"Notification,omitempty"` // @gotags: json:"notification"
	Payment      []*Payment             `protobuf:"bytes,11,rep,name=Payment,proto3" json:"Payment,omitempty"`           // @gotags: json:"payment"
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_apriori_service_proto_entity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_services_apriori_service_proto_entity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_services_apriori_service_proto_entity_proto_rawDescGZIP(), []int{9}
}

func (x *User) GetIdUser() int64 {
	if x != nil {
		return x.IdUser
	}
	return 0
}

func (x *User) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *User) GetNotification() []*Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *User) GetPayment() []*Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type Apriori struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdApriori   int64                  `protobuf:"varint,1,opt,name=IdApriori,proto3" json:"IdApriori,omitempty"`          // @gotags: json:"id_apriori"
	Code        string                 `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`                     // @gotags: json:"code"
	Item        string                 `protobuf:"bytes,3,opt,name=Item,proto3" json:"Item,omitempty"`                     // @gotags: json:"item"
	Discount    float32                `protobuf:"fixed32,4,opt,name=Discount,proto3" json:"Discount,omitempty"`           // @gotags: json:"discount"
	Support     float32                `protobuf:"fixed32,5,opt,name=Support,proto3" json:"Support,omitempty"`             // @gotags: json:"support"
	Confidence  float32                `protobuf:"fixed32,6,opt,name=Confidence,proto3" json:"Confidence,omitempty"`       // @gotags: json:"confidence"
	RangeDate   string                 `protobuf:"bytes,7,opt,name=RangeDate,proto3" json:"RangeDate,omitempty"`           // @gotags: json:"range_date"
	IsActive    bool                   `protobuf:"varint,8,opt,name=IsActive,proto3" json:"IsActive,omitempty"`            // @gotags: json:"is_active"
	Description *string                `protobuf:"bytes,9,opt,name=Description,proto3,oneof" json:"Description,omitempty"` // @gotags: json:"description"
	Mass        int32                  `protobuf:"varint,10,opt,name=Mass,proto3" json:"Mass,omitempty"`                   // @gotags: json:"mass"
	Image       *string                `protobuf:"bytes,11,opt,name=Image,proto3,oneof" json:"Image,omitempty"`            // @gotags: json:"image"
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`          // @gotags: json:"created_at"
	UserOrder   *UserOrder             `protobuf:"bytes,13,opt,name=UserOrder,proto3" json:"UserOrder,omitempty"`          // @gotags: json:"user_order"
}

func (x *Apriori) Reset() {
	*x = Apriori{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_apriori_service_proto_entity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Apriori) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Apriori) ProtoMessage() {}

func (x *Apriori) ProtoReflect() protoreflect.Message {
	mi := &file_services_apriori_service_proto_entity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Apriori.ProtoReflect.Descriptor instead.
func (*Apriori) Descriptor() ([]byte, []int) {
	return file_services_apriori_service_proto_entity_proto_rawDescGZIP(), []int{10}
}

func (x *Apriori) GetIdApriori() int64 {
	if x != nil {
		return x.IdApriori
	}
	return 0
}

func (x *Apriori) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Apriori) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *Apriori) GetDiscount() float32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *Apriori) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

func (x *Apriori) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *Apriori) GetRangeDate() string {
	if x != nil {
		return x.RangeDate
	}
	return ""
}

func (x *Apriori) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Apriori) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Apriori) GetMass() int32 {
	if x != nil {
		return x.Mass
	}
	return 0
}

func (x *Apriori) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

func (x *Apriori) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Apriori) GetUserOrder() *UserOrder {
	if x != nil {
		return x.UserOrder
	}
	return nil
}

type GenerateApriori struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemSet     []string `protobuf:"bytes,1,rep,name=ItemSet,proto3" json:"ItemSet,omitempty"`          // @gotags: json:"item_set"
	Support     float32  `protobuf:"fixed32,2,opt,name=Support,proto3" json:"Support,omitempty"`        // @gotags: json:"support"
	Iterate     int32    `protobuf:"varint,3,opt,name=Iterate,proto3" json:"Iterate,omitempty"`         // @gotags: json:"iterate"
	Transaction int32    `protobuf:"varint,4,opt,name=Transaction,proto3" json:"Transaction,omitempty"` // @gotags: json:"transaction"
	Confidence  float32  `protobuf:"fixed32,5,opt,name=Confidence,proto3" json:"Confidence,omitempty"`  // @gotags: json:"confidence"
	Discount    float32  `protobuf:"fixed32,6,opt,name=Discount,proto3" json:"Discount,omitempty"`      // @gotags: json:"discount"
	Description string   `protobuf:"bytes,7,opt,name=Description,proto3" json:"Description,omitempty"`  // @gotags: json:"description"
	RangeDate   string   `protobuf:"bytes,8,opt,name=RangeDate,proto3" json:"RangeDate,omitempty"`      // @gotags: json:"range_date"
}

func (x *GenerateApriori) Reset() {
	*x = GenerateApriori{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_apriori_service_proto_entity_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateApriori) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateApriori) ProtoMessage() {}

func (x *GenerateApriori) ProtoReflect() protoreflect.Message {
	mi := &file_services_apriori_service_proto_entity_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateApriori.ProtoReflect.Descriptor instead.
func (*GenerateApriori) Descriptor() ([]byte, []int) {
	return file_services_apriori_service_proto_entity_proto_rawDescGZIP(), []int{11}
}

func (x *GenerateApriori) GetItemSet() []string {
	if x != nil {
		return x.ItemSet
	}
	return nil
}

func (x *GenerateApriori) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

func (x *GenerateApriori) GetIterate() int32 {
	if x != nil {
		return x.Iterate
	}
	return 0
}

func (x *GenerateApriori) GetTransaction() int32 {
	if x != nil {
		return x.Transaction
	}
	return 0
}

func (x *GenerateApriori) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *GenerateApriori) GetDiscount() float32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *GenerateApriori) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GenerateApriori) GetRangeDate() string {
	if x != nil {
		return x.RangeDate
	}
	return ""
}

type UserOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdOrder        int64    `protobuf:"varint,1,opt,name=IdOrder,proto3" json:"IdOrder,omitempty"`                     // @gotags: json:"id_order"
	PayloadId      int64    `protobuf:"varint,2,opt,name=PayloadId,proto3" json:"PayloadId,omitempty"`                 // @gotags: json:"payload_id"
	Code           *string  `protobuf:"bytes,3,opt,name=Code,proto3,oneof" json:"Code,omitempty"`                      // @gotags: json:"code"
	Name           *string  `protobuf:"bytes,4,opt,name=Name,proto3,oneof" json:"Name,omitempty"`                      // @gotags: json:"name"
	Price          *int64   `protobuf:"varint,5,opt,name=Price,proto3,oneof" json:"Price,omitempty"`                   // @gotags: json:"price"
	Image          *string  `protobuf:"bytes,6,opt,name=Image,proto3,oneof" json:"Image,omitempty"`                    // @gotags: json:"image"
	Quantity       *int32   `protobuf:"varint,7,opt,name=Quantity,proto3,oneof" json:"Quantity,omitempty"`             // @gotags: json:"quantity"
	TotalPriceItem *int64   `protobuf:"varint,8,opt,name=TotalPriceItem,proto3,oneof" json:"TotalPriceItem,omitempty"` // @gotags: json:"total_price_item"
	Payment        *Payment `protobuf:"bytes,9,opt,name=Payment,proto3" json:"Payment,omitempty"`                      // @gotags: json:"payment"
}

func (x *UserOrder) Reset() {
	*x = UserOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_apriori_service_proto_entity_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOrder) ProtoMessage() {}

func (x *UserOrder) ProtoReflect() protoreflect.Message {
	mi := &file_services_apriori_service_proto_entity_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOrder.ProtoReflect.Descriptor instead.
func (*UserOrder) Descriptor() ([]byte, []int) {
	return file_services_apriori_service_proto_entity_proto_rawDescGZIP(), []int{12}
}

func (x *UserOrder) GetIdOrder() int64 {
	if x != nil {
		return x.IdOrder
	}
	return 0
}

func (x *UserOrder) GetPayloadId() int64 {
	if x != nil {
		return x.PayloadId
	}
	return 0
}

func (x *UserOrder) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *UserOrder) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UserOrder) GetPrice() int64 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *UserOrder) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

func (x *UserOrder) GetQuantity() int32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *UserOrder) GetTotalPriceItem() int64 {
	if x != nil && x.TotalPriceItem != nil {
		return *x.TotalPriceItem
	}
	return 0
}

func (x *UserOrder) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

var File_services_apriori_service_proto_entity_proto protoreflect.FileDescriptor

var file_services_apriori_service_proto_entity_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x49, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x55, 0x0a, 0x0d, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x22, 0xc3, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x25, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x54, 0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x2e, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x54, 0x61, 0x67, 0x22, 0x75, 0x0a, 0x11, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xad,
	0x02, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x0a, 0x0e, 0x49, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x49, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03,
	0x55, 0x52, 0x4c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x55, 0x52, 0x4c,
	0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x55, 0x52, 0x4c, 0x22, 0x93,
	0x02, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24,
	0x0a, 0x0d, 0x49, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x49, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4e, 0x6f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x4e, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x99, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x49, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x0c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x2b, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0e, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a,
	0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x07, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0a, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x47, 0x72, 0x6f,
	0x73, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09,
	0x52, 0x0b, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0b, 0x46, 0x72, 0x61, 0x75, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0b, 0x46, 0x72, 0x61, 0x75, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x08, 0x42, 0x61, 0x6e,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x56, 0x41, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08, 0x56, 0x41,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x42, 0x69, 0x6c,
	0x6c, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52,
	0x0a, 0x42, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x42, 0x69, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0e, 0x52, 0x07, 0x42, 0x69, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a,
	0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12,
	0x52, 0x0e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x46, 0x72, 0x61, 0x75, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x56, 0x41, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x42, 0x69, 0x6c,
	0x6c, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x42, 0x69, 0x6c, 0x6c,
	0x4b, 0x65, 0x79, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0xff, 0x02, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x49,
	0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x73, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x4d, 0x61, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x22, 0x91, 0x03, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x41, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x41, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x41, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x41, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x28,
	0x0a, 0x0f, 0x41, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x41, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x12, 0x41, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x41, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0c, 0x41, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x41, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61,
	0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x4d, 0x61, 0x73, 0x73, 0x42, 0x15,
	0x0a, 0x13, 0x5f, 0x41, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x41, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xff, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x49, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xb9, 0x03, 0x0a, 0x07, 0x41, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x64, 0x41, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x49, 0x64, 0x41, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x4d, 0x61, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x09, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x22, 0xfd, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d,
	0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x49,
	0x74, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x22, 0xe9, 0x02, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x05, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x0e, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x43,
	0x6f, 0x64, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x42, 0x1f, 0x5a, 0x1d, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_apriori_service_proto_entity_proto_rawDescOnce sync.Once
	file_services_apriori_service_proto_entity_proto_rawDescData = file_services_apriori_service_proto_entity_proto_rawDesc
)

func file_services_apriori_service_proto_entity_proto_rawDescGZIP() []byte {
	file_services_apriori_service_proto_entity_proto_rawDescOnce.Do(func() {
		file_services_apriori_service_proto_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_apriori_service_proto_entity_proto_rawDescData)
	})
	return file_services_apriori_service_proto_entity_proto_rawDescData
}

var file_services_apriori_service_proto_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_services_apriori_service_proto_entity_proto_goTypes = []interface{}{
	(*Category)(nil),              // 0: proto.Category
	(*PasswordReset)(nil),         // 1: proto.PasswordReset
	(*Comment)(nil),               // 2: proto.Comment
	(*RatingFromComment)(nil),     // 3: proto.RatingFromComment
	(*Notification)(nil),          // 4: proto.Notification
	(*Transaction)(nil),           // 5: proto.Transaction
	(*Payment)(nil),               // 6: proto.Payment
	(*Product)(nil),               // 7: proto.Product
	(*ProductRecommendation)(nil), // 8: proto.ProductRecommendation
	(*User)(nil),                  // 9: proto.User
	(*Apriori)(nil),               // 10: proto.Apriori
	(*GenerateApriori)(nil),       // 11: proto.GenerateApriori
	(*UserOrder)(nil),             // 12: proto.UserOrder
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_services_apriori_service_proto_entity_proto_depIdxs = []int32{
	13, // 0: proto.Category.CreatedAt:type_name -> google.protobuf.Timestamp
	13, // 1: proto.Category.UpdatedAt:type_name -> google.protobuf.Timestamp
	13, // 2: proto.Comment.CreatedAt:type_name -> google.protobuf.Timestamp
	12, // 3: proto.Comment.UserOrder:type_name -> proto.UserOrder
	13, // 4: proto.Notification.CreatedAt:type_name -> google.protobuf.Timestamp
	9,  // 5: proto.Notification.User:type_name -> proto.User
	13, // 6: proto.Transaction.CreatedAt:type_name -> google.protobuf.Timestamp
	13, // 7: proto.Transaction.UpdatedAt:type_name -> google.protobuf.Timestamp
	9,  // 8: proto.Payment.User:type_name -> proto.User
	12, // 9: proto.Payment.UserOrder:type_name -> proto.UserOrder
	13, // 10: proto.Product.CreatedAt:type_name -> google.protobuf.Timestamp
	13, // 11: proto.Product.UpdatedAt:type_name -> google.protobuf.Timestamp
	13, // 12: proto.User.CreatedAt:type_name -> google.protobuf.Timestamp
	13, // 13: proto.User.UpdatedAt:type_name -> google.protobuf.Timestamp
	4,  // 14: proto.User.Notification:type_name -> proto.Notification
	6,  // 15: proto.User.Payment:type_name -> proto.Payment
	13, // 16: proto.Apriori.CreatedAt:type_name -> google.protobuf.Timestamp
	12, // 17: proto.Apriori.UserOrder:type_name -> proto.UserOrder
	6,  // 18: proto.UserOrder.Payment:type_name -> proto.Payment
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_services_apriori_service_proto_entity_proto_init() }
func file_services_apriori_service_proto_entity_proto_init() {
	if File_services_apriori_service_proto_entity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_apriori_service_proto_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_apriori_service_proto_entity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordReset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_apriori_service_proto_entity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_apriori_service_proto_entity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingFromComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_apriori_service_proto_entity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_apriori_service_proto_entity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_apriori_service_proto_entity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_apriori_service_proto_entity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_apriori_service_proto_entity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductRecommendation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_apriori_service_proto_entity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_apriori_service_proto_entity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Apriori); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_apriori_service_proto_entity_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateApriori); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_apriori_service_proto_entity_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_apriori_service_proto_entity_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_services_apriori_service_proto_entity_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_services_apriori_service_proto_entity_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_services_apriori_service_proto_entity_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_services_apriori_service_proto_entity_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_services_apriori_service_proto_entity_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_services_apriori_service_proto_entity_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_apriori_service_proto_entity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_services_apriori_service_proto_entity_proto_goTypes,
		DependencyIndexes: file_services_apriori_service_proto_entity_proto_depIdxs,
		MessageInfos:      file_services_apriori_service_proto_entity_proto_msgTypes,
	}.Build()
	File_services_apriori_service_proto_entity_proto = out.File
	file_services_apriori_service_proto_entity_proto_rawDesc = nil
	file_services_apriori_service_proto_entity_proto_goTypes = nil
	file_services_apriori_service_proto_entity_proto_depIdxs = nil
}
