// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: adapter/pkg/user-order/pb/user-order.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdOrder        int64    `protobuf:"varint,1,opt,name=IdOrder,proto3" json:"IdOrder,omitempty"`
	PayloadId      int64    `protobuf:"varint,2,opt,name=PayloadId,proto3" json:"PayloadId,omitempty"`
	Code           string   `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Name           string   `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Price          int64    `protobuf:"varint,5,opt,name=Price,proto3" json:"Price,omitempty"`
	Image          string   `protobuf:"bytes,6,opt,name=Image,proto3" json:"Image,omitempty"`
	Quantity       int32    `protobuf:"varint,7,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	TotalPriceItem int64    `protobuf:"varint,8,opt,name=TotalPriceItem,proto3" json:"TotalPriceItem,omitempty"`
	Payment        *Payment `protobuf:"bytes,9,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *UserOrder) Reset() {
	*x = UserOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOrder) ProtoMessage() {}

func (x *UserOrder) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOrder.ProtoReflect.Descriptor instead.
func (*UserOrder) Descriptor() ([]byte, []int) {
	return file_adapter_pkg_user_order_pb_user_order_proto_rawDescGZIP(), []int{0}
}

func (x *UserOrder) GetIdOrder() int64 {
	if x != nil {
		return x.IdOrder
	}
	return 0
}

func (x *UserOrder) GetPayloadId() int64 {
	if x != nil {
		return x.PayloadId
	}
	return 0
}

func (x *UserOrder) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserOrder) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserOrder) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UserOrder) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UserOrder) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *UserOrder) GetTotalPriceItem() int64 {
	if x != nil {
		return x.TotalPriceItem
	}
	return 0
}

func (x *UserOrder) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type ListUserOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserOrder []*UserOrder `protobuf:"bytes,1,rep,name=UserOrder,proto3" json:"UserOrder,omitempty"`
}

func (x *ListUserOrderResponse) Reset() {
	*x = ListUserOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserOrderResponse) ProtoMessage() {}

func (x *ListUserOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserOrderResponse.ProtoReflect.Descriptor instead.
func (*ListUserOrderResponse) Descriptor() ([]byte, []int) {
	return file_adapter_pkg_user_order_pb_user_order_proto_rawDescGZIP(), []int{1}
}

func (x *ListUserOrderResponse) GetUserOrder() []*UserOrder {
	if x != nil {
		return x.UserOrder
	}
	return nil
}

type GetUserOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserOrder *UserOrder `protobuf:"bytes,1,opt,name=UserOrder,proto3" json:"UserOrder,omitempty"`
}

func (x *GetUserOrderResponse) Reset() {
	*x = GetUserOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserOrderResponse) ProtoMessage() {}

func (x *GetUserOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserOrderResponse.ProtoReflect.Descriptor instead.
func (*GetUserOrderResponse) Descriptor() ([]byte, []int) {
	return file_adapter_pkg_user_order_pb_user_order_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserOrderResponse) GetUserOrder() *UserOrder {
	if x != nil {
		return x.UserOrder
	}
	return nil
}

type GetUserOrderByPayloadIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadId int64 `protobuf:"varint,1,opt,name=PayloadId,proto3" json:"PayloadId,omitempty"`
}

func (x *GetUserOrderByPayloadIdRequest) Reset() {
	*x = GetUserOrderByPayloadIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserOrderByPayloadIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserOrderByPayloadIdRequest) ProtoMessage() {}

func (x *GetUserOrderByPayloadIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserOrderByPayloadIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserOrderByPayloadIdRequest) Descriptor() ([]byte, []int) {
	return file_adapter_pkg_user_order_pb_user_order_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserOrderByPayloadIdRequest) GetPayloadId() int64 {
	if x != nil {
		return x.PayloadId
	}
	return 0
}

type GetUserOrderByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetUserOrderByUserIdRequest) Reset() {
	*x = GetUserOrderByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserOrderByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserOrderByUserIdRequest) ProtoMessage() {}

func (x *GetUserOrderByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserOrderByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserOrderByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_adapter_pkg_user_order_pb_user_order_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserOrderByUserIdRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserOrderByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *GetUserOrderByIdRequest) Reset() {
	*x = GetUserOrderByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserOrderByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserOrderByIdRequest) ProtoMessage() {}

func (x *GetUserOrderByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserOrderByIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserOrderByIdRequest) Descriptor() ([]byte, []int) {
	return file_adapter_pkg_user_order_pb_user_order_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserOrderByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Other Proto
type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdPayload         int64        `protobuf:"varint,1,opt,name=IdPayload,proto3" json:"IdPayload,omitempty"`
	UserId            int64        `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	OrderId           string       `protobuf:"bytes,3,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	TransactionTime   string       `protobuf:"bytes,4,opt,name=TransactionTime,proto3" json:"TransactionTime,omitempty"`
	TransactionStatus string       `protobuf:"bytes,5,opt,name=TransactionStatus,proto3" json:"TransactionStatus,omitempty"`
	TransactionId     string       `protobuf:"bytes,6,opt,name=TransactionId,proto3" json:"TransactionId,omitempty"`
	StatusCode        string       `protobuf:"bytes,7,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	SignatureKey      string       `protobuf:"bytes,8,opt,name=SignatureKey,proto3" json:"SignatureKey,omitempty"`
	SettlementTime    string       `protobuf:"bytes,9,opt,name=SettlementTime,proto3" json:"SettlementTime,omitempty"`
	PaymentType       string       `protobuf:"bytes,10,opt,name=PaymentType,proto3" json:"PaymentType,omitempty"`
	MerchantId        string       `protobuf:"bytes,11,opt,name=MerchantId,proto3" json:"MerchantId,omitempty"`
	GrossAmount       string       `protobuf:"bytes,12,opt,name=GrossAmount,proto3" json:"GrossAmount,omitempty"`
	FraudStatus       string       `protobuf:"bytes,13,opt,name=FraudStatus,proto3" json:"FraudStatus,omitempty"`
	BankType          string       `protobuf:"bytes,14,opt,name=BankType,proto3" json:"BankType,omitempty"`
	VANumber          string       `protobuf:"bytes,15,opt,name=VANumber,proto3" json:"VANumber,omitempty"`
	BillerCode        string       `protobuf:"bytes,16,opt,name=BillerCode,proto3" json:"BillerCode,omitempty"`
	BillKey           string       `protobuf:"bytes,17,opt,name=BillKey,proto3" json:"BillKey,omitempty"`
	ReceiptNumber     string       `protobuf:"bytes,18,opt,name=ReceiptNumber,proto3" json:"ReceiptNumber,omitempty"`
	Address           string       `protobuf:"bytes,19,opt,name=Address,proto3" json:"Address,omitempty"`
	Courier           string       `protobuf:"bytes,20,opt,name=Courier,proto3" json:"Courier,omitempty"`
	CourierService    string       `protobuf:"bytes,21,opt,name=CourierService,proto3" json:"CourierService,omitempty"`
	User              *User        `protobuf:"bytes,22,opt,name=user,proto3" json:"user,omitempty"`
	UserOrder         []*UserOrder `protobuf:"bytes,23,rep,name=user_order,json=userOrder,proto3" json:"user_order,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_adapter_pkg_user_order_pb_user_order_proto_rawDescGZIP(), []int{6}
}

func (x *Payment) GetIdPayload() int64 {
	if x != nil {
		return x.IdPayload
	}
	return 0
}

func (x *Payment) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Payment) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *Payment) GetTransactionTime() string {
	if x != nil {
		return x.TransactionTime
	}
	return ""
}

func (x *Payment) GetTransactionStatus() string {
	if x != nil {
		return x.TransactionStatus
	}
	return ""
}

func (x *Payment) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *Payment) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *Payment) GetSignatureKey() string {
	if x != nil {
		return x.SignatureKey
	}
	return ""
}

func (x *Payment) GetSettlementTime() string {
	if x != nil {
		return x.SettlementTime
	}
	return ""
}

func (x *Payment) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *Payment) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *Payment) GetGrossAmount() string {
	if x != nil {
		return x.GrossAmount
	}
	return ""
}

func (x *Payment) GetFraudStatus() string {
	if x != nil {
		return x.FraudStatus
	}
	return ""
}

func (x *Payment) GetBankType() string {
	if x != nil {
		return x.BankType
	}
	return ""
}

func (x *Payment) GetVANumber() string {
	if x != nil {
		return x.VANumber
	}
	return ""
}

func (x *Payment) GetBillerCode() string {
	if x != nil {
		return x.BillerCode
	}
	return ""
}

func (x *Payment) GetBillKey() string {
	if x != nil {
		return x.BillKey
	}
	return ""
}

func (x *Payment) GetReceiptNumber() string {
	if x != nil {
		return x.ReceiptNumber
	}
	return ""
}

func (x *Payment) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Payment) GetCourier() string {
	if x != nil {
		return x.Courier
	}
	return ""
}

func (x *Payment) GetCourierService() string {
	if x != nil {
		return x.CourierService
	}
	return ""
}

func (x *Payment) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Payment) GetUserOrder() []*UserOrder {
	if x != nil {
		return x.UserOrder
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdUser       int64                  `protobuf:"varint,1,opt,name=IdUser,proto3" json:"IdUser,omitempty"`
	Role         int32                  `protobuf:"varint,2,opt,name=Role,proto3" json:"Role,omitempty"`
	Name         string                 `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Email        string                 `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	Address      string                 `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty"`
	Phone        string                 `protobuf:"bytes,6,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Password     string                 `protobuf:"bytes,7,opt,name=Password,proto3" json:"Password,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	Notification []*Notification        `protobuf:"bytes,10,rep,name=notification,proto3" json:"notification,omitempty"`
	Payment      []*Payment             `protobuf:"bytes,11,rep,name=payment,proto3" json:"payment,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_adapter_pkg_user_order_pb_user_order_proto_rawDescGZIP(), []int{7}
}

func (x *User) GetIdUser() int64 {
	if x != nil {
		return x.IdUser
	}
	return 0
}

func (x *User) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *User) GetNotification() []*Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *User) GetPayment() []*Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdNotification int64                  `protobuf:"varint,1,opt,name=IdNotification,proto3" json:"IdNotification,omitempty"`
	UserId         int64                  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Title          string                 `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Description    string                 `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	URL            string                 `protobuf:"bytes,5,opt,name=URL,proto3" json:"URL,omitempty"`
	IsRead         bool                   `protobuf:"varint,6,opt,name=IsRead,proto3" json:"IsRead,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	User           *User                  `protobuf:"bytes,8,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_adapter_pkg_user_order_pb_user_order_proto_rawDescGZIP(), []int{8}
}

func (x *Notification) GetIdNotification() int64 {
	if x != nil {
		return x.IdNotification
	}
	return 0
}

func (x *Notification) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Notification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Notification) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Notification) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Notification) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *Notification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Notification) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

var File_adapter_pkg_user_order_pb_user_order_proto protoreflect.FileDescriptor

var file_adapter_pkg_user_order_pb_user_order_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x02, 0x0a, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x26, 0x0a, 0x0e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0x4b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x22, 0x3e, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x64, 0x22, 0x35, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x64, 0x22, 0x99, 0x06, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x49, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x47,
	0x72, 0x6f, 0x73, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x46, 0x72, 0x61, 0x75, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x46, 0x72, 0x61, 0x75, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x56,
	0x41, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x56,
	0x41, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x69, 0x6c, 0x6c, 0x65,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x69, 0x6c,
	0x6c, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x6c, 0x6c, 0x4b,
	0x65, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x69, 0x6c, 0x6c, 0x4b, 0x65,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22,
	0x89, 0x03, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3c,
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x90, 0x02, 0x0a, 0x0c,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x49, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x49, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x38,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x32, 0xa9,
	0x02, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x42, 0x79,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x6c, 0x6c, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1d, 0x5a, 0x1b, 0x2e, 0x2f,
	0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_adapter_pkg_user_order_pb_user_order_proto_rawDescOnce sync.Once
	file_adapter_pkg_user_order_pb_user_order_proto_rawDescData = file_adapter_pkg_user_order_pb_user_order_proto_rawDesc
)

func file_adapter_pkg_user_order_pb_user_order_proto_rawDescGZIP() []byte {
	file_adapter_pkg_user_order_pb_user_order_proto_rawDescOnce.Do(func() {
		file_adapter_pkg_user_order_pb_user_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_adapter_pkg_user_order_pb_user_order_proto_rawDescData)
	})
	return file_adapter_pkg_user_order_pb_user_order_proto_rawDescData
}

var file_adapter_pkg_user_order_pb_user_order_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_adapter_pkg_user_order_pb_user_order_proto_goTypes = []interface{}{
	(*UserOrder)(nil),                      // 0: user_order.UserOrder
	(*ListUserOrderResponse)(nil),          // 1: user_order.ListUserOrderResponse
	(*GetUserOrderResponse)(nil),           // 2: user_order.GetUserOrderResponse
	(*GetUserOrderByPayloadIdRequest)(nil), // 3: user_order.GetUserOrderByPayloadIdRequest
	(*GetUserOrderByUserIdRequest)(nil),    // 4: user_order.GetUserOrderByUserIdRequest
	(*GetUserOrderByIdRequest)(nil),        // 5: user_order.GetUserOrderByIdRequest
	(*Payment)(nil),                        // 6: user_order.Payment
	(*User)(nil),                           // 7: user_order.User
	(*Notification)(nil),                   // 8: user_order.Notification
	(*timestamppb.Timestamp)(nil),          // 9: google.protobuf.Timestamp
}
var file_adapter_pkg_user_order_pb_user_order_proto_depIdxs = []int32{
	6,  // 0: user_order.UserOrder.payment:type_name -> user_order.Payment
	0,  // 1: user_order.ListUserOrderResponse.UserOrder:type_name -> user_order.UserOrder
	0,  // 2: user_order.GetUserOrderResponse.UserOrder:type_name -> user_order.UserOrder
	7,  // 3: user_order.Payment.user:type_name -> user_order.User
	0,  // 4: user_order.Payment.user_order:type_name -> user_order.UserOrder
	9,  // 5: user_order.User.CreatedAt:type_name -> google.protobuf.Timestamp
	9,  // 6: user_order.User.UpdatedAt:type_name -> google.protobuf.Timestamp
	8,  // 7: user_order.User.notification:type_name -> user_order.Notification
	6,  // 8: user_order.User.payment:type_name -> user_order.Payment
	9,  // 9: user_order.Notification.CreatedAt:type_name -> google.protobuf.Timestamp
	7,  // 10: user_order.Notification.user:type_name -> user_order.User
	3,  // 11: user_order.UserOrderService.FindAllByPayloadId:input_type -> user_order.GetUserOrderByPayloadIdRequest
	4,  // 12: user_order.UserOrderService.FindAllByUserId:input_type -> user_order.GetUserOrderByUserIdRequest
	5,  // 13: user_order.UserOrderService.FindById:input_type -> user_order.GetUserOrderByIdRequest
	1,  // 14: user_order.UserOrderService.FindAllByPayloadId:output_type -> user_order.ListUserOrderResponse
	1,  // 15: user_order.UserOrderService.FindAllByUserId:output_type -> user_order.ListUserOrderResponse
	2,  // 16: user_order.UserOrderService.FindById:output_type -> user_order.GetUserOrderResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_adapter_pkg_user_order_pb_user_order_proto_init() }
func file_adapter_pkg_user_order_pb_user_order_proto_init() {
	if File_adapter_pkg_user_order_pb_user_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserOrderByPayloadIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserOrderByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserOrderByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adapter_pkg_user_order_pb_user_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_adapter_pkg_user_order_pb_user_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_adapter_pkg_user_order_pb_user_order_proto_goTypes,
		DependencyIndexes: file_adapter_pkg_user_order_pb_user_order_proto_depIdxs,
		MessageInfos:      file_adapter_pkg_user_order_pb_user_order_proto_msgTypes,
	}.Build()
	File_adapter_pkg_user_order_pb_user_order_proto = out.File
	file_adapter_pkg_user_order_pb_user_order_proto_rawDesc = nil
	file_adapter_pkg_user_order_pb_user_order_proto_goTypes = nil
	file_adapter_pkg_user_order_pb_user_order_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserOrderServiceClient is the client API for UserOrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserOrderServiceClient interface {
	FindAllByPayloadId(ctx context.Context, in *GetUserOrderByPayloadIdRequest, opts ...grpc.CallOption) (*ListUserOrderResponse, error)
	FindAllByUserId(ctx context.Context, in *GetUserOrderByUserIdRequest, opts ...grpc.CallOption) (*ListUserOrderResponse, error)
	FindById(ctx context.Context, in *GetUserOrderByIdRequest, opts ...grpc.CallOption) (*GetUserOrderResponse, error)
}

type userOrderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserOrderServiceClient(cc grpc.ClientConnInterface) UserOrderServiceClient {
	return &userOrderServiceClient{cc}
}

func (c *userOrderServiceClient) FindAllByPayloadId(ctx context.Context, in *GetUserOrderByPayloadIdRequest, opts ...grpc.CallOption) (*ListUserOrderResponse, error) {
	out := new(ListUserOrderResponse)
	err := c.cc.Invoke(ctx, "/user_order.UserOrderService/FindAllByPayloadId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userOrderServiceClient) FindAllByUserId(ctx context.Context, in *GetUserOrderByUserIdRequest, opts ...grpc.CallOption) (*ListUserOrderResponse, error) {
	out := new(ListUserOrderResponse)
	err := c.cc.Invoke(ctx, "/user_order.UserOrderService/FindAllByUserId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userOrderServiceClient) FindById(ctx context.Context, in *GetUserOrderByIdRequest, opts ...grpc.CallOption) (*GetUserOrderResponse, error) {
	out := new(GetUserOrderResponse)
	err := c.cc.Invoke(ctx, "/user_order.UserOrderService/FindById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserOrderServiceServer is the server API for UserOrderService service.
type UserOrderServiceServer interface {
	FindAllByPayloadId(context.Context, *GetUserOrderByPayloadIdRequest) (*ListUserOrderResponse, error)
	FindAllByUserId(context.Context, *GetUserOrderByUserIdRequest) (*ListUserOrderResponse, error)
	FindById(context.Context, *GetUserOrderByIdRequest) (*GetUserOrderResponse, error)
}

// UnimplementedUserOrderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserOrderServiceServer struct {
}

func (*UnimplementedUserOrderServiceServer) FindAllByPayloadId(context.Context, *GetUserOrderByPayloadIdRequest) (*ListUserOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllByPayloadId not implemented")
}
func (*UnimplementedUserOrderServiceServer) FindAllByUserId(context.Context, *GetUserOrderByUserIdRequest) (*ListUserOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllByUserId not implemented")
}
func (*UnimplementedUserOrderServiceServer) FindById(context.Context, *GetUserOrderByIdRequest) (*GetUserOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindById not implemented")
}

func RegisterUserOrderServiceServer(s *grpc.Server, srv UserOrderServiceServer) {
	s.RegisterService(&_UserOrderService_serviceDesc, srv)
}

func _UserOrderService_FindAllByPayloadId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserOrderByPayloadIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOrderServiceServer).FindAllByPayloadId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_order.UserOrderService/FindAllByPayloadId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOrderServiceServer).FindAllByPayloadId(ctx, req.(*GetUserOrderByPayloadIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserOrderService_FindAllByUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserOrderByUserIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOrderServiceServer).FindAllByUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_order.UserOrderService/FindAllByUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOrderServiceServer).FindAllByUserId(ctx, req.(*GetUserOrderByUserIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserOrderService_FindById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserOrderByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserOrderServiceServer).FindById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_order.UserOrderService/FindById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserOrderServiceServer).FindById(ctx, req.(*GetUserOrderByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserOrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user_order.UserOrderService",
	HandlerType: (*UserOrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindAllByPayloadId",
			Handler:    _UserOrderService_FindAllByPayloadId_Handler,
		},
		{
			MethodName: "FindAllByUserId",
			Handler:    _UserOrderService_FindAllByUserId_Handler,
		},
		{
			MethodName: "FindById",
			Handler:    _UserOrderService_FindById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "adapter/pkg/user-order/pb/user-order.proto",
}
