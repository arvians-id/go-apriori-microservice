version: "3"
services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: apriori
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - ./backend/database/postgres/postgres-data:/var/lib/postgresql/data
    networks:
      - thesis
    restart: always
  cache:
    image: redis:6
    ports:
      - "6379:6379"
    networks:
      - thesis
    restart: always
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./backend/monitoring/grafana/grafana-data:/var/lib/grafana
      - ./backend/monitoring/grafana/grafana-data:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=Rahasia123
    depends_on:
      - prometheus
    networks:
      - thesis
    restart: always
  prometheus:
    image: prom/prometheus:v2.27.1
    volumes:
      - ./backend/monitoring/prometheus:/etc/prometheus/
      - ./backend/monitoring/prometheus/prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: always
    networks:
      - thesis
  nsqlookupd:
    image: nsqio/nsq
    ports:
      - "4160:4160"
      - "4161:4161"
    command: /nsqlookupd
    networks:
      - thesis
    restart: always
  nsqd:
    image: nsqio/nsq
    ports:
      - "4150:4150"
      - "4151:4151"
    depends_on:
      - nsqlookupd
    command: /nsqd -lookupd-tcp-address=nsqlookupd:4160 -broadcast-address=nsqd
    networks:
      - thesis
    restart: always
  nsqadmin:
    image: nsqio/nsq
    ports:
      - "4171:4171"
    depends_on:
      - nsqlookupd
      - nsqd
    command: /nsqadmin -lookupd-http-address=nsqlookupd:4161
    networks:
      - thesis
    restart: always
  messagebroker:
    build: ./backend/services/message-service
    env_file:
      - ./backend/services/message-service/config/envs/prod.env
    ports:
      - "8085:8080"
    restart: always
    depends_on:
      - nsqlookupd
    networks:
      - thesis
#  adapter:
#    build: ./backend/adapter
#    env_file:
#      - ./backend/adapter/config/envs/prod.env
#    ports:
#      - "8086:8080"
#    restart: always
#    depends_on:
#      - nsqlookupd
#    networks:
#      - thesis
#  apriori:
#    build: ./backend/services/apriori-service
#    env_file:
#      - ./backend/services/apriori-service/config/envs/prod.env
#    ports:
#      - "50050:50050"
#    restart: always
#    depends_on:
#      - db
#      - cache
#      - messagebroker
#      - adapter
#    networks:
#      - thesis
#  category:
#    build: ./backend/services/category-service
#    env_file:
#      - ./backend/services/category-service/config/envs/prod.env
#    ports:
#      - "50051:50051"
#    restart: always
#    depends_on:
#      - db
#      - cache
#      - messagebroker
#      - adapter
#    networks:
#      - thesis
#  comment:
#    build: ./backend/services/comment-service
#    env_file:
#      - ./backend/services/comment-service/config/envs/prod.env
#    ports:
#      - "50052:50052"
#    restart: always
#    depends_on:
#      - db
#      - cache
#      - messagebroker
#      - adapter
#    networks:
#      - thesis
#  notification:
#    build: ./backend/services/notification-service
#    env_file:
#      - ./backend/services/notification-service/config/envs/prod.env
#    ports:
#      - "50053:50053"
#    restart: always
#    depends_on:
#      - db
#      - cache
#      - messagebroker
#      - adapter
#    networks:
#      - thesis
#  password:
#    build: ./backend/services/password-reset-service
#    env_file:
#      - ./backend/services/password-reset-service/config/envs/prod.env
#    ports:
#      - "50054:50054"
#    restart: always
#    depends_on:
#      - db
#      - cache
#      - messagebroker
#      - adapter
#    networks:
#      - thesis
#  payment:
#    build: ./backend/services/payment-service
#    env_file:
#      - ./backend/services/payment-service/config/envs/prod.env
#    ports:
#      - "50055:50055"
#    restart: always
#    depends_on:
#      - db
#      - cache
#      - messagebroker
#      - adapter
#    networks:
#      - thesis
#  product:
#    build: ./backend/services/product-service
#    env_file:
#      - ./backend/services/product-service/config/envs/prod.env
#    ports:
#      - "50056:50056"
#    restart: always
#    depends_on:
#      - db
#      - cache
#      - messagebroker
#      - adapter
#    networks:
#      - thesis
#  transaction:
#    build: ./backend/services/transaction-service
#    env_file:
#      - ./backend/services/transaction-service/config/envs/prod.env
#    ports:
#      - "50057:50057"
#    restart: always
#    depends_on:
#      - db
#      - cache
#      - messagebroker
#      - adapter
#    networks:
#      - thesis
#  order:
#    build: ./backend/services/user-order-service
#    env_file:
#      - ./backend/services/user-order-service/config/envs/prod.env
#    ports:
#      - "50058:50058"
#    restart: always
#    depends_on:
#      - db
#      - cache
#      - messagebroker
#      - adapter
#    networks:
#      - thesis
#  user:
#    build: ./backend/services/user-service
#    env_file:
#      - ./backend/services/user-service/config/envs/prod.env
#    ports:
#      - "50059:50059"
#    restart: always
#    depends_on:
#      - db
#      - cache
#      - messagebroker
#      - adapter
#    networks:
#      - thesis

networks:
  thesis:
    driver: bridge